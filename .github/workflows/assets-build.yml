name: Assets Build

on:
  push:
    paths:
      - 'assets/**'
  pull_request:
    paths:
      - 'assets/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # Setup Node for JS build
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: assets/package-lock.json
    
    # Build JS assets
    - name: Install JS Dependencies
      working-directory: ./assets
      run: npm ci

    - name: Test JS Assets
      working-directory: ./assets
      run: npm test

    # Docker steps
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/trunk'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and Push Docker image
      if: github.ref == 'refs/heads/trunk'
      working-directory: ./assets
      run: |
        VERSION=$(grep '"version":' package.json | sed 's/.*"version": "\(.*\)",/\1/').$(git rev-parse --short HEAD)
        docker build -t mwinteringham/restfulbookerplatform_assets:$VERSION .
        docker push mwinteringham/restfulbookerplatform_assets:$VERSION
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    # Deploy to EC2
    - name: Deploy to EC2
      if: github.ref == 'refs/heads/trunk'
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        # Setup SSH
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
        chmod 600 ~/.ssh/private_key
        
        # Execute deployment commands directly via SSH
        DOCKER_IMAGE="mwinteringham/restfulbookerplatform_assets:${VERSION}"
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/private_key ${EC2_USERNAME}@${EC2_HOST} "
          sudo docker pull ${DOCKER_IMAGE} && \
          sudo docker stop rbp-assets || true && \
          sudo docker rm rbp-assets || true && \
          sudo docker images -q mwinteringham/restfulbookerplatform_assets | grep -v \$(sudo docker images ${DOCKER_IMAGE} -q) | xargs -r sudo docker rmi || true && \
          sudo docker run -d --network rbp-host --name rbp-assets -p 80:80 -e dbRefresh='60' ${DOCKER_IMAGE}
        "
